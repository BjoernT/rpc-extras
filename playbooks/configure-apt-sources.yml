---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Configure the default apt sources for RPC-O
  hosts: "{{ apt_target_group | default('hosts') }}"
  environment: "{{ deployment_environment_variables | default({}) }}"
  user: root
  gather_facts: true
  pre_tasks:
    - name: Check for artifacts
      uri:
        url: "{{ rpco_mirror_base_url }}/apt-mirror/integrated/dists/{{ rpc_release }}-{{ ansible_distribution_release }}/Release"
        method: HEAD
      failed_when: false
      register: check_artifacts

    - name: Set artifacts enabled
      set_fact:
        artifact_enabled: "{{ check_artifacts.status == 200 }}"

  tasks:
    - name: Sync artifact files (all)
      copy:
        src: "{{ item }}"
        dest: "/etc/openstack_deploy/group_vars/all/{{ item | basename }}"
      with_items:
        - files/apt.yml
      when:
        - artifact_enabled | bool

    - name: Determine the existing Ubuntu repo configuration
      shell: 'sed "s/^[ \t]*//" /etc/apt/sources.list | grep -oP "^deb \K(\[?.*\]?.*ubuntu\S*\/?)(?= {{ ansible_distribution_release }} main)"'
      register: _ubuntu_repo
      when:
        - host_ubuntu_repo is not defined
      changed_when: false
      delegate_to: "{{ physical_host | default(omit) }}"
      when:
        - artifact_enabled | bool

    - name: Set host_ubuntu_repo fact
      set_fact:
        host_ubuntu_repo: "{{ _ubuntu_repo.stdout_lines[0] }}"
      when:
        - host_ubuntu_repo is not defined
        - _ubuntu_repo.stdout_lines is defined
        - artifact_enabled | bool

    - name: Replace the apt sources file with our content
      copy:
        content: |
          # Base repository
          deb {{ host_ubuntu_repo }} {{ ansible_distribution_release }} main universe
        dest: "/etc/apt/sources.list"
        backup: yes
      register: apt_sources_configure
      when:
        - artifact_enabled | bool

    - name: Create the rpco apt sources file
      copy:
        content: |
          # RPC-OpenStack repository
          deb {{ rpco_mirror_base_url }}/apt-mirror/integrated/ {{ rpc_release }}-{{ ansible_distribution_release }} main
        dest: "/etc/apt/sources.list.d/rpco.list"
        backup: yes
      register: apt_sources_configure_rpco
      when:
        - artifact_enabled | bool

    - name: Add rpco keys
      apt_key:
        url: "{{ rpco_mirror_base_url }}/apt-mirror/rcbops-release-signing-key.asc"
        state: "present"
      register: add_keys
      until: add_keys | success
      retries: 5
      delay: 2
      when:
        - artifact_enabled | bool

    - name: Remove extra sources
      lineinfile:
        path: /etc/apt/sources.list
        state: absent
        regexp: "{{ item }}"
      with_items:
        - "^deb-src"
        - "-backports"
        - "-security"
        - "-updates"
      when:
        - artifact_enabled | bool

    - name: Update apt-cache
      apt:
        update_cache: yes
      when:
        - (artifact_enabled | bool) and (apt_sources_configure | changed or apt_sources_configure_rpco | changed)

  roles:
    # We execute the pip_install role here to ensure that all
    # hosts have the correct rpco repo configured now that
    # /etc/apt/sources.list has been changed to no longer
    # include the updates repo.
    - role: "pip_install"
      pip_lock_to_internal_repo: false
      internal_lb_vip_address: localhost
      pip_upstream_url: "{{ rpco_mirror_base_url }}/os-releases/{{ rpc_release }}/{{ repo_build_os_distro_version }}/get-pip.py"
      pip_install_upper_constraints: "{{ rpco_mirror_base_url }}/os-releases/{{ rpc_release }}/{{ repo_build_os_distro_version }}/requirements_absolute_requirements.txt"
      when:
        - artifact_enabled | bool
