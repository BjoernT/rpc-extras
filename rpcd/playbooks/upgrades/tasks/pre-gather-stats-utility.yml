---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather nova service-list
  shell: "source ~/openrc; nova --insecure service-list"
  args:
    executable: /bin/bash
  register: nova_servicelist_result

- name: Gather cinder service-list
  shell: "source ~/openrc; cinder --insecure service-list"
  register: cinder_servicelist_result
  args:
    executable: /bin/bash

- name: Gather neutron agent-list
  shell: "source ~/openrc; neutron --insecure agent-list"
  args:
    executable: /bin/bash
  register: neutron_agentlist_result

- name: Gather orchestration service list
  shell: "source ~/openrc; openstack orchestration service list --insecure"
  args:
    executable: /bin/bash
  register: orchestration_servicelist_result

- name: Gather openstack endpoint list
  shell: "source ~/openrc; openstack --insecure endpoint list"
  args:
    executable: /bin/bash
  register: endpointlist_result

- name: Obtain a list of neutron routers
  shell: source ~/openrc; neutron router-list -f value --column id
  args:
    executable: /bin/bash
  register: neutron_routers

- name: Check agent assigned to each neutron router
  shell: source ~/openrc; neutron l3-agent-list-hosting-router -f value --column host {{ item }}
  args:
    executable: /bin/bash
  with_items: "{{ neutron_routers.stdout_lines }}"
  register: neutron_routers_agents

- name: Write file containing agent for each router
  copy:
    content: "{{ item.stdout|replace('_','-') }}" # we replace here since containers will get renamed during upgrade
    dest: "{{ backup_dir }}/{{ item.item }}.pre-upgrade"
  with_items: "{{ neutron_routers_agents.results }}"
  delegate_to: localhost

- name: Output into text file
  template:
    src: "templates/status-os.txt.j2"
    dest: "{{ backup_dir }}/status-os-{{ datetime_stamp }}.txt"
  delegate_to: localhost
